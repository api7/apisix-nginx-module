diff --git src/ngx_http_lua_socket_tcp.c src/ngx_http_lua_socket_tcp.c
index 230679f..3cb9c2b 100644
--- src/ngx_http_lua_socket_tcp.c
+++ src/ngx_http_lua_socket_tcp.c
@@ -1632,7 +1632,7 @@ ngx_http_lua_socket_tcp_check_busy(ngx_http_request_t *r,
 
 
 int
-ngx_http_lua_ffi_socket_tcp_sslhandshake(ngx_http_request_t *r,
+ngx_http_lua_ffi_socket_tcp_tlshandshake(ngx_http_request_t *r,
     ngx_http_lua_socket_tcp_upstream_t *u, ngx_ssl_session_t *sess,
     int enable_session_reuse, ngx_str_t *server_name, int verify,
     int ocsp_status_req, STACK_OF(X509) *chain, EVP_PKEY *pkey,
@@ -1858,13 +1858,13 @@ new_ssl_name:
         ngx_add_timer(c->read, u->connect_timeout);
 
         u->conn_waiting = 1;
-        u->write_prepare_retvals = ngx_http_lua_ssl_handshake_retval_handler;
+        u->write_prepare_retvals = ngx_http_lua_tls_handshake_retval_handler;
 
         ngx_http_lua_cleanup_pending_operation(coctx);
         coctx->cleanup = ngx_http_lua_coctx_cleanup;
         coctx->data = u;
 
-        c->ssl->handler = ngx_http_lua_ssl_handshake_handler;
+        c->ssl->handler = ngx_http_lua_tls_handshake_handler;
 
         if (ctx->entered_content_phase) {
             r->write_event_handler = ngx_http_lua_content_wev_handler;
@@ -1888,7 +1888,7 @@ new_ssl_name:
 
 
 static void
-ngx_http_lua_ssl_handshake_handler(ngx_connection_t *c)
+ngx_http_lua_tls_handshake_handler(ngx_connection_t *c)
 {
     int                          waiting;
     ngx_int_t                    rc;
@@ -1994,7 +1994,7 @@ failed:
 
 
 int
-ngx_http_lua_ffi_socket_tcp_get_sslhandshake_result(ngx_http_request_t *r,
+ngx_http_lua_ffi_socket_tcp_get_tlshandshake_result(ngx_http_request_t *r,
     ngx_http_lua_socket_tcp_upstream_t *u, ngx_ssl_session_t **sess,
     const char **errmsg, int *openssl_error_code)
 {
@@ -2015,7 +2015,7 @@ ngx_http_lua_ffi_socket_tcp_get_sslhandshake_result(ngx_http_request_t *r,
 
 
 static int
-ngx_http_lua_ssl_handshake_retval_handler(ngx_http_request_t *r,
+ngx_http_lua_tls_handshake_retval_handler(ngx_http_request_t *r,
     ngx_http_lua_socket_tcp_upstream_t *u, lua_State *L)
 {
     ngx_connection_t            *c;
